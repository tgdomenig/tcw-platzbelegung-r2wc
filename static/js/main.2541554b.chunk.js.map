{"version":3,"sources":["util/CalendarLocalizer.js","data/FetchData.js","data/DataSource.js","data/StageEvents.js","components/Platzbelegung0.js","index.js"],"names":["formatString","longDay","shortDay","dateWithoutYear","dateWithYear","time","localize","formats","dateFormat","dayFormat","date","culture","localizer","format","dayRangeHeaderFormat","fmtStartEnd","dayHeaderFormat","locales","de","dateFnsLocalizer","parse","startOfWeek","getDay","getFnsLocalizer","messages","MESSAGES","_ref","start","end","event","allDay","week","work_week","day","month","previous","next","yesterday","tomorrow","today","agenda","noEventsInRange","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_fetchFn","response","status","statusText","totalEvents","headers","get","totalPages","jsonData","json","fetchRestData","_x","_fetchRestData","apply","arguments","_asyncToGenerator","_callee","endpoint","startDate","go_on_callback","_ref$perPage","perPage","order","orderby","slug","separator","isEventsCalendarCase","fetchedEvents","page","go_on","uri","_yield$fetch$then$cat","events","_context","concat","indexOf","fetch","t0","_toConsumableArray","SITE","TRIBE_ENDPOINT","fetchEvents","_fetchEvents","minEndDate","lastFullyLoadedDay","_yield$fetchRestData","d","currentLastDate","start_date","Date","addDays","stageEvents","jsonEvents","map","id","title","end_date","itc_platzbelegung","split","s","className","platz","stagePlatzbelegung","_ref2","_myParseDate","flat","getStartOfWeek","weekStartsOn","testCmp","r2wc","_useState","useState","_useState2","_slicedToArray","setEvents","_useState3","_useState4","_useState5","_useState6","selectedDate","_useState7","_useState8","targetRange","setTargetRange","_useState9","_useState10","loadedRange","setLoadedRange","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","setTimestampDataLoaded","_useState15","_useState16","determineLoadingRange","tgtRange","lddRange","a","b","minDateLoaded","loadingRange","useEffect","_loadEvents","events0","_determineLoadingRang","_yield$fetchEvents","_yield$fetchEvents$ev","raw_events","events1","timestamp","maxDateLoaded","console","log","Modal","content","getContainer","document","getElementById","mergeEvents","selDate","newTgtRange","determineTargetRange","isContainedInLoadedRange","_x2","_x3","loadEvents","evts1","evts2","allEvents","Map","el","has","set","Array","from","_localize","React","createElement","customElements"],"mappings":"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","file":"static/js/main.2541554b.chunk.js","sourcesContent":["import React from 'react'\n\nimport { dateFnsLocalizer } from 'react-big-calendar'\nimport {format, parse, startOfWeek, getDay} from 'date-fns';\n\nimport { de } from 'date-fns/locale'\n\nconst formatString = {\n  longDay: 'EEEE dd.MM.yyyy',\n  shortDay: \"EEEEEE' 'dd.MM.\",\n  dateWithoutYear: 'dd.MM.',\n  dateWithYear: 'dd.MM.yyyy',\n  time: 'HH:mm'\n}\n\n\nexport function localize() {\n  const culture = \"de\";\n\n  const localizer = getFnsLocalizer();\n\n  const dayShortFmt = (date, culture, localizer) => localizer.format(date, formatString.shortDay, culture);\n  const dayLongFmt = (date, culture, localizer) => localizer.format(date, formatString.longDay, culture);\n\n  let formats = {\n    dateFormat: 'dd',\n  \n    dayFormat: dayShortFmt,\n  \n    dayRangeHeaderFormat: fmtStartEnd,\n\n    dayHeaderFormat: dayLongFmt\n\n  };\n\n  return {culture, localizer, formats, messages: MESSAGES}\n}\n\nexport function fmtStartEnd({start, end}, culture, localizer) {\n  return (\n    localizer.format(start, formatString.dateWithYear, culture) + ' — ' +\n    localizer.format(end, formatString.dateWithYear, culture)\n  )\n}\n\nexport function fmtEventStartEnd({start, end}, culture, localizer) {\n  return (\n    <div>\n      <div>\n        {localizer.format(start, formatString.longDay, culture)}\n      </div>\n      <div>\n        {localizer.format(start, formatString.time, culture) + ' - ' + localizer.format(end, formatString.time, culture)} Uhr\n      </div>\n    </div>\n  )\n}\n\nexport function formatTimestamp(ts, culture, localizer) {\n  return( localizer.format(ts, \"dd.MM.yyyy 'um' HH:mm:ss 'Uhr'\", culture));\n}\n\n//    'en-US': require('date-fns/locale/en-US'),\n\nexport function getFnsLocalizer() {\n  const locales = {\n    'de': de,\n  }\n  return dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n  });\n}\n\nconst MESSAGES = {\n    date: 'Datum',\n    time: 'Zeit',\n    event: 'Veranstaltung',\n    allDay: 'Ganzer Tag',\n    week: 'Woche',\n    work_week: 'Arbeitswoche',\n    day: 'Tag',\n    month: 'Monat',\n    previous: 'Zurück',\n    next: 'Vor',\n    yesterday: 'Gestern',\n    tomorrow: 'Morgen',\n    today: 'Heute',\n    agenda: 'Agenda',\n    noEventsInRange: 'Keine Veranstaltungen.',\n}","\nimport {format} from 'date-fns'\n\nfunction _fetchFn(response) {\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(response.statusText);\n  }\n  else {\n\n    const result = {\n      totalEvents: response.headers.get('x-wp-total'),\n      totalPages: response.headers.get('X-WP-TotalPages'),\n      jsonData: response.json() // resonse.json() returns promise\n    };\n\n    return (result);\n  }\n}\n\n// fetch concerts via WP Rest API. The concerts are filtered by the wp-filter \"rest_itc_cpt_concert_query\" in functions.php\nexport async function fetchRestData({endpoint, startDate, go_on_callback, perPage=100, order, orderby}) {\n\n  let slug = endpoint, separator = \"?\";\n  \n  if (startDate) {\n    slug += `${separator}min_concert_date=${format(startDate, \"yyyyMMdd\")}`;\n    separator = \"&\";\n  }\n  if (perPage) {\n    slug += `${separator}per_page=${perPage}`;\n    separator = \"&\";\n  }\n  if (order) {\n    slug += `${separator}order=${order}`;\n    separator = \"&\";\n  }\n  if (orderby) {\n    slug += `${separator}orderby=${orderby}`;\n    separator = \"&\";\n  }\n\n  const isEventsCalendarCase = endpoint.indexOf('tribe/events/v1') > -1;\n\n  let fetchedEvents = []; let page = 1, go_on = true;\n\n  while (go_on) {\n\n    const uri = `${slug}&page=${page}`;\n\n    const {totalPages, jsonData, error} = await fetch(uri).then(_fetchFn).catch(error => ({error}));\n\n    if (error) {\n      return ({error});\n    }\n\n    const events = isEventsCalendarCase ? (await jsonData).events : (await jsonData);\n\n    if (events && events.length > 0) {\n      fetchedEvents = [...fetchedEvents, ...events];\n    }\n  \n    if ((! totalPages) || page >= totalPages) { // end of data\n      go_on = false;\n    }\n    else {\n      go_on = go_on_callback(fetchedEvents);\n    }\n\n    page = page + 1;\n  }\n  \n  return ({events: fetchedEvents});\n}\n","\nimport {format, addDays, parse} from 'date-fns'\nimport { fetchRestData } from './FetchData';\n\n/* Fetch events from tribe events REST API and stage them in an appropriate format */\n\nconst IS_PRODUCTION_DATA = true;\n\nconst SITE = IS_PRODUCTION_DATA ? `https://tc-witikon.ch/` :  `https://tcw.it-couture.ch/`;\n\nconst TRIBE_ENDPOINT = `wp-json/tribe/events/v1/events`;\n\n// const ENDPOINT_SLUG = SITE + `wp-json/tribe/events/v1/events?start_date=2021-04-01&per_page=100`;\n//     https://tcw.it-couture.ch/wp-json/tribe/events/v1/events?start_date=2021-06-28&per_page=100\n\n// https://tc-witikon.ch/wp-json/tribe/events/v1/events?start_date=2022-05-01&per_page=100\n// https://tcw.it-couture.ch/wp-json/tribe/events/v1/events?start_date=2021-04-01&per_page=100\n\nexport async function fetchEvents({startDate, minEndDate}) {\n\n  let lastFullyLoadedDay;\n\n  const endpoint = SITE + TRIBE_ENDPOINT;\n\n\n  // callback determines whether more data should be fetched\n  const go_on_callback = (events) => {\n    if (! events) {\n      throw ({error: \"SOMETHING WRONG, no events even though not end of data\"});\n    }\n    const currentLastDate = _myParseDate(events[events.length-1].start_date);\n\n    const go_on = (! minEndDate) || (currentLastDate <= minEndDate);\n\n    if (! go_on) {\n      lastFullyLoadedDay = addDays(currentLastDate, -1);\n    }\n    return go_on;\n  }\n\n  if (! lastFullyLoadedDay) {\n    // in this case, all data was loaded\n    lastFullyLoadedDay = Date.parse(\"2999-12-31\");\n  }\n\n  const {events, error} = await fetchRestData({endpoint, startDate, go_on_callback, perPage: 100});\n\n  return {events, error, lastFullyLoadedDay};\n\n}\n\nfunction _myParseDate(d) {\n  return parse(d, \"yyyy-MM-dd HH:mm:ss\", new Date());\n}\n\n","import {parse} from 'date-fns'\n\nexport function stageEvents(jsonEvents) {\n\n  if (jsonEvents) {\n    return jsonEvents.map(({id, title, start_date, end_date, itc_platzbelegung}) => {\n\n      const plaetze = stagePlatzbelegung(itc_platzbelegung);\n\n\n      return plaetze.map(({className, platz}) => (\n        {\n          id: id + \" \" + platz,\n          title, // default accessor for react-big-calendar\n          start: _myParseDate(start_date), // default accessor for react-big-calendar\n          end: _myParseDate(end_date), // default accessor for react-big-calendar\n          platz,\n          className\n        })\n      );\n    }).flat();\n  }\n\n}\n\nfunction _myParseDate(d) {\n  return parse(d, \"yyyy-MM-dd HH:mm:ss\", new Date());\n}\n\n  /* \n    NOTE: itc_platzbelegung is an attribute corresponding to a custom field of the custom post type that is created by EventsCalendar.\n    It is added to the WP REST API using the tribe-events filters 'tribe_rest_single_event_data' and 'tribe_rest_event_data'; see the functions.php file \n    of the child-theme.\n    itc_platzbelegung has the format [\"1\"] (Belegung Platz 1) or in case of several occupied courts [\"1|3|4\"] (Belegung Plätze 1, 3, 4);\n  */\nfunction stagePlatzbelegung(itc_platzbelegung) {\n\n  if (itc_platzbelegung && itc_platzbelegung.length > 0 && itc_platzbelegung[0] !== \"\") {\n    return itc_platzbelegung[0].split(\"|\").map(s => ({className: \"platz-\" + s, platz: \"Platz \" + s}));\n  }\n  else return []\n}\n\n/* ---- EXAMPLE TRIBE EVENT as received from endpoint https://tcw.it-couture.ch/wp-json/tribe/events/v1/events ---- \n\n{\n  \"id\": 8212,\n  \"global_id\": \"tcw.it-couture.ch?id=8212\",\n  \"global_id_lineage\": [\n    \"tcw.it-couture.ch?id=8212\"\n  ],\n  \"author\": \"1\",\n  \"status\": \"publish\",\n  \"date\": \"2021-04-07 09:15:56\",\n  \"date_utc\": \"2021-04-07 07:15:56\",\n  \"modified\": \"2021-04-07 09:15:56\",\n  \"modified_utc\": \"2021-04-07 07:15:56\",\n  \"url\": \"https://tcw.it-couture.ch/event/interclub-40-3l-damen-r-bachmann-3/\",\n  \"rest_url\": \"https://tcw.it-couture.ch/wp-json/tribe/events/v1/events/8212\",\n  \"title\": \"Interclub 40+ 3L Damen (R. Bachmann)\",\n  \"description\": \"\",\n  \"excerpt\": \"\",\n  \"slug\": \"interclub-40-3l-damen-r-bachmann-3\",\n  \"image\": false,\n  \"all_day\": false,\n  \"start_date\": \"2021-06-26 09:00:00\",\n  \"start_date_details\": {\n    \"year\": \"2021\",\n    \"month\": \"06\",\n    \"day\": \"26\",\n    \"hour\": \"09\",\n    \"minutes\": \"00\",\n    \"seconds\": \"00\"\n  },\n  \"end_date\": \"2021-06-26 13:00:00\",\n  \"end_date_details\": {\n    \"year\": \"2021\",\n    \"month\": \"06\",\n    \"day\": \"26\",\n    \"hour\": \"13\",\n    \"minutes\": \"00\",\n    \"seconds\": \"00\"\n  },\n  \"utc_start_date\": \"2021-06-26 07:00:00\",\n  \"utc_start_date_details\": {\n    \"year\": \"2021\",\n    \"month\": \"06\",\n    \"day\": \"26\",\n    \"hour\": \"07\",\n    \"minutes\": \"00\",\n    \"seconds\": \"00\"\n  },\n  \"utc_end_date\": \"2021-06-26 11:00:00\",\n  \"utc_end_date_details\": {\n    \"year\": \"2021\",\n    \"month\": \"06\",\n    \"day\": \"26\",\n    \"hour\": \"11\",\n    \"minutes\": \"00\",\n    \"seconds\": \"00\"\n  },\n  \"timezone\": \"Europe/Berlin\",\n  \"timezone_abbr\": \"CEST\",\n  \"cost\": \"\",\n  \"cost_details\": {\n    \"currency_symbol\": \"\",\n    \"currency_position\": \"prefix\",\n    \"values\": []\n  },\n  \"website\": \"\",\n  \"show_map\": false,\n  \"show_map_link\": false,\n  \"hide_from_listings\": false,\n  \"sticky\": false,\n  \"featured\": false,\n  \"categories\": [\n    {\n      \"name\": \"Platzbelegung Interclub\",\n      \"slug\": \"platzbelegung-interclub\",\n      \"term_group\": 0,\n      \"term_taxonomy_id\": 28,\n      \"taxonomy\": \"tribe_events_cat\",\n      \"description\": \"\",\n      \"parent\": 0,\n      \"count\": 20,\n      \"filter\": \"raw\",\n      \"id\": 28,\n      \"urls\": {\n        \"self\": \"https://tcw.it-couture.ch/wp-json/tribe/events/v1/categories/28\",\n        \"collection\": \"https://tcw.it-couture.ch/wp-json/tribe/events/v1/categories\"\n      }\n    }\n  ],\n  \"tags\": [],\n  \"venue\": {\n    \"id\": 1187,\n    \"author\": \"7\",\n    \"status\": \"publish\",\n    \"date\": \"2017-03-05 12:39:47\",\n    \"date_utc\": \"2017-03-05 11:39:47\",\n    \"modified\": \"2017-03-05 12:39:47\",\n    \"modified_utc\": \"2017-03-05 11:39:47\",\n    \"url\": \"https://tcw.it-couture.ch/veranstaltungsort/tennis-club-witikon/\",\n    \"venue\": \"Tennis Club Witikon\",\n    \"slug\": \"tennis-club-witikon\",\n    \"address\": \"Eschenhaustrasse 29\",\n    \"city\": \"Zürich\",\n    \"country\": \"Schweiz\",\n    \"province\": \"Zürich\",\n    \"zip\": \"8053\",\n    \"stateprovince\": \"Zürich\",\n    \"geo_lat\": 47.3656629,\n    \"geo_lng\": 8.5892775,\n    \"json_ld\": {\n      \"@type\": \"Place\",\n      \"name\": \"Tennis Club Witikon\",\n      \"description\": \"\",\n      \"url\": \"https://tcw.it-couture.ch/veranstaltungsort/tennis-club-witikon/\",\n      \"address\": {\n        \"@type\": \"PostalAddress\",\n        \"streetAddress\": \"Eschenhaustrasse 29\",\n        \"addressLocality\": \"Zürich\",\n        \"addressRegion\": \"Zürich\",\n        \"postalCode\": \"8053\",\n        \"addressCountry\": \"Schweiz\"\n      },\n      \"geo\": {\n        \"@type\": \"GeoCoordinates\",\n        \"latitude\": 47.3656629,\n        \"longitude\": 8.5892775\n      },\n      \"telephone\": \"\",\n      \"sameAs\": \"\"\n    },\n    \"show_map\": true,\n    \"show_map_link\": true,\n    \"global_id\": \"tcw.it-couture.ch?id=1187\",\n    \"global_id_lineage\": [\n      \"tcw.it-couture.ch?id=1187\"\n    ]\n  },\n  \"organizer\": [],\n  \"json_ld\": {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"Event\",\n    \"name\": \"Interclub 40+ 3L Damen (R. Bachmann)\",\n    \"description\": \"\",\n    \"url\": \"https://tcw.it-couture.ch/event/interclub-40-3l-damen-r-bachmann-3/\",\n    \"startDate\": \"2021-06-26T09:00:00+02:00\",\n    \"endDate\": \"2021-06-26T13:00:00+02:00\",\n    \"location\": {\n      \"@type\": \"Place\",\n      \"name\": \"Tennis Club Witikon\",\n      \"description\": \"\",\n      \"url\": \"https://tcw.it-couture.ch/veranstaltungsort/tennis-club-witikon/\",\n      \"address\": {\n        \"@type\": \"PostalAddress\",\n        \"streetAddress\": \"Eschenhaustrasse 29\",\n        \"addressLocality\": \"Zürich\",\n        \"addressRegion\": \"Zürich\",\n        \"postalCode\": \"8053\",\n        \"addressCountry\": \"Schweiz\"\n      },\n      \"geo\": {\n        \"@type\": \"GeoCoordinates\",\n        \"latitude\": 47.3656629,\n        \"longitude\": 8.5892775\n      },\n      \"telephone\": \"\",\n      \"sameAs\": \"\"\n    },\n    \"performer\": \"Organization\"\n  },\n  \"itc_platzbelegung\": [\n    \"1|2|3|4\"\n  ]\n}\n\n*/","import React, {useState, useEffect} from 'react'\nimport { Calendar, Views } from 'react-big-calendar'\n\nimport {Modal, Spin} from 'antd'\nimport {startOfWeek, addDays, format} from 'date-fns';\n\nimport {localize, fmtEventStartEnd, formatTimestamp} from '../util/CalendarLocalizer'\nimport {getToolbar} from '../util/CalendarToolbar'\n\n//import {  Styled } from 'direflow-component';\n\nimport calendarStyles from 'react-big-calendar/lib/css/react-big-calendar.css'\nimport additionalStyles from './Platzbelegung.css'\n\nimport {fetchEvents} from '../data/DataSource'\nimport { stageEvents } from '../data/StageEvents';\n\nexport default function Platzbelegung() {\n\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  /* \n  Bemerkung: react-big-calendar zeigt die Agenda immer vom selektierten Datum an 30 Tage vorwärts.\n  Wir wollen jedoch statt dessen die Agenda synchron mit der \"Week View\" zeigen, d.h. für die selektierte Woche.\n  Zu diesem Zweck müssen wir das selektierte Datum \"kontrollieren\", d.h. als Zustandsvariable ausserhalb des Kalenders\n  definieren und explizit setzen, wenn zur Agenda-View gewechselt wird.\n  */\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [targetRange, setTargetRange] = useState(null); // der Datumsbereich, der zumindest geladen werden soll\n  const [loadedRange, setLoadedRange] = useState(null); // der Datumsbereich, der effektiv geladen wurde\n  const [isLoading, setIsLoading] = useState(null); // Variable, um zu vermeiden, dass mehrere Ladevorgänge gleichzeitig asynchron getriggered werden\n\n  const [timestampDataLoaded, setTimestampDataLoaded] = useState(null);\n  const [eventPopupVisible, setEventPopupVisible] = useState(false);\n\n  const isInTargetRange = (selDate, tgtRange) => {\n    return tgtRange && selDate >= tgtRange[0] && selDate <= tgtRange[1];\n  }\n\n  const determineTargetRange = (selDate) => {\n    const startOfWeek = getStartOfWeek(selDate);\n//    const endOfWeek = addDays(startOfWeek, 6); // end of current week\n    const targetEnd = addDays(startOfWeek, 20); // end of current week\n    return [startOfWeek, targetEnd];\n  }\n\n  const isContainedInLoadedRange = (tgtRange, lddRange) => {\n    return (tgtRange && lddRange && tgtRange[0] >= lddRange[0] && tgtRange[1] <= lddRange[1])\n  }\n\n  // bestimme, abhängig vom targetRange und dem bereits geladenen Range, welcher Bereich zusätzlich geladen werden soll\n  const determineLoadingRange = (tgtRange, lddRange) => {\n    let a, b, minDateLoaded;\n    if (! lddRange) {\n      minDateLoaded = addDays(tgtRange[0],-7);\n      a = minDateLoaded;\n      b = tgtRange[1];\n    }\n    else {\n      if (tgtRange[0] < lddRange[0]) {\n        minDateLoaded = addDays(tgtRange[0],-14);\n        a = minDateLoaded;\n        b = lddRange[0];\n      }\n      else { // targetRange[1] > loadedRange[1]\n        minDateLoaded = lddRange[0];\n        a = lddRange[1];\n        b = tgtRange[1];\n      }\n    }\n    return {loadingRange: [a,b], minDateLoaded};\n  }\n\n  useEffect(() => {\n\n//    let mounted = true; // READ THIS ARTICLE: https://medium.com/doctolib/react-stop-checking-if-your-component-is-mounted-3bb2568a4934\n\n    async function loadEvents(tgtRange, lddRange, events0) {\n\n      const {loadingRange, minDateLoaded} = determineLoadingRange(tgtRange, lddRange);\n\n      console.log(\"Loading from \" + format(loadingRange[0], \"dd-MM\") + \" to \" + format(loadingRange[1], \"dd-MM\"));\n      const {events: raw_events = [], lastFullyLoadedDay, error} = \n        await fetchEvents({startDate: loadingRange[0], minEndDate: loadingRange[1]});\n\n      const events1 = stageEvents(raw_events);\n\n      const timestamp = new Date();\n\n      if (error) {\n        Modal.error({\n          title: \"Fehler!\",\n          content: \"Die Daten konnten nicht geladen werden\",\n          getContainer: document.getElementById('tcw-platzbelegung-web-component')\n        });\n        return {error};\n      }\n\n      const maxDateLoaded = (lddRange && lastFullyLoadedDay < lddRange[1]) ? lddRange[1] : lastFullyLoadedDay;\n\n      if (events0 && events0.length > 0) {\n        setEvents(mergeEvents(events0, events1));\n      }\n      else {\n        // console.log(\"Events: (\" + events1.length + \"):\");\n        // console.log(events1);\n        setEvents(events1);\n      };\n\n      setTargetRange(tgtRange);\n      setLoadedRange([minDateLoaded, maxDateLoaded]);\n      console.log(\"Loaded from \" + format(minDateLoaded, \"dd-MM\") + \" to \" + format(maxDateLoaded, \"dd-MM\"));\n      setTimestampDataLoaded(timestamp);\n      setIsLoading(false);\n    }\n  \n    if ( ! isLoading && ! isInTargetRange(selectedDate, targetRange)) {\n      const newTgtRange = determineTargetRange(selectedDate);\n      if (isContainedInLoadedRange(newTgtRange, loadedRange)) {\n        setTargetRange(newTgtRange);\n      }\n      else {\n        setIsLoading(true);\n        loadEvents(newTgtRange, loadedRange, events);\n      }\n    }\n\n    return(() => { \n    //  mounted = false;\n    }); // cleanup\n  },\n    [selectedDate, targetRange, loadedRange, isLoading, events]\n  );\n\n  const mergeEvents = (evts1, evts2) => {\n    const allEvents = new Map(evts1.map(el => [el.id, el]));\n    if (evts2 && evts2.length > 0) {\n      evts2.forEach(el => {\n        if (! allEvents.has(el.id)) {\n          allEvents.set(el.id, el);\n        }\n      });  \n    }\n    return Array.from(allEvents.values());\n  }\n\n\n  const style = {height: 1200, width: '100%'};\n\n  const {culture, localizer, formats, messages} = localize();\n\n  const onSelectEvent = event => {\n    setSelectedEvent(event);\n    setEventPopupVisible(true);\n  }\n\n//  const onSelectSlot = () => {}\n\n  const renderEventBar = ({event}) => {\n    return(<div></div>)\n  }\n\n  const renderEventPopup = () => {\n    if (selectedEvent) {\n      const {start, end, platz, title} = selectedEvent;\n      return(\n        <div>\n\n          <div>\n            {fmtEventStartEnd({start, end}, culture, localizer)}\n          </div>\n          <div className={\"emph\"}>\n            {platz}\n          </div>\n          <div className={\"emph\"}>\n            {title}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  const renderEventDay = ({event}) => {\n      return(\n        <div style={{padding: 4}}>\n            {event.title}\n        </div>\n      )\n  }\n\n  const renderEventAgenda = ({event}) => {\n    const {title, platz} = event;\n    return(\n      <div>{platz}: {title}</div>\n\n    )\n  }\n\n  const onChangeView = view => {\n    if (view === Views.AGENDA && selectedDate) {\n      setSelectedDate(getStartOfWeek(selectedDate));\n    }\n  }\n\n  const onNavigate = (date, view) => {\n    setSelectedDate(date);\n//    loadMoreEventsIfNecessary(date);\n  }\n\n  // const loadMoreEventsIfNecessary = async date => {\n\n  //   const {haveToFetch, start, minEnd} = getFetchParameters(date);\n\n  //   if (haveToFetch) {\n  //     const {events, lastFullyLoadedDay} = await fetchEvents({start, minEnd});\n\n  //     setEvents(events);\n  //     setNominalMinDate(start);\n  //     setNominalMaxDate(lastFullyLoadedDay);\n  //   }\n  // }\n\n\n  const popupProps = {\n    getContainer: document.getElementById('tcw-platzbelegung-web-component'),\n    centered: true,\n    \n    // closable: false,\n    // footer: <Button onClick={() => { setPopupVisible(false); }}>Zurück</Button>\n  }\n\n  return(\n    <div>HELLO THIS IS JUST A PLACEHOLDER</div>\n  );\n\n  return(\n    <div style={{...calendarStyles, ...additionalStyles}}>\n      <div id=\"tcw-platzbelegung-web-component\" className=\"web-component tcw-platzbelegung\">\n\n      <Modal {...popupProps} footer={false} visible={eventPopupVisible} onCancel={()=> { setEventPopupVisible(false); }} >\n        <div>{renderEventPopup()}</div>\n      </Modal>\n\n      <Modal {...popupProps} closable={false} bodyStyle={{textAlign: 'center'}} style={{width: 200}} footer={null} visible={isLoading}>\n        <Spin size=\"large\" />\n      </Modal>\n\n      <Calendar\n        culture={culture}\n        localizer={localizer}\n        messages={messages}\n        formats={formats}\n\n        date={selectedDate}\n\n        onNavigate={onNavigate}\n        length={6} // number of days in Agenda\n\n        onSelectEvent={onSelectEvent}\n\n        onView = {view => { onChangeView(view, this); }}\n\n        min={new Date(2021, 0, 1, 8, 0)} // 8:00\n        max={new Date(2021, 0, 1, 22, 0)} // Max will be 22:00\n  \n        views={[Views.WEEK, Views.DAY, Views.AGENDA]}\n\n        style={style}\n        events={events}\n        defaultView={Views.WEEK}\n\n//        tooltipAccessor={() => (<div>THIS IS TOOLTIP</div>)}\n\n        eventPropGetter={({className}) => ({className}) }\n\n\n        components={{\n          toolbar: getToolbar(),\n          week: {event: renderEventBar},\n          day: {event: renderEventDay},\n          agenda: {event: renderEventAgenda}\n        }}\n      />\n\n      {timestampDataLoaded && <div>aktualisiert am {formatTimestamp(timestampDataLoaded, culture, localizer)}</div>}\n\n\n      {/* <Calendar \n//        style={style} \n\n        localizer={getFnsLocalizer()}\n\n        events={DATA}\n        startAccessor=\"eventStart\"\n        endAccessor=\"eventEnd\"\n\n  //      eventPropGetter={(event,start,end,isSelected) => ({className: event.meta.calendarItemClass}) }\n\n  //      showMultiDayTimes={true} // overnight events\n\n        onSelectEvent={onSelectEvent}\n        onSelectSlot={onSelectSlot}\n        views={myViews}\n        defaultView={Views.MONTH}\n  //      defaultDate={selectedDate}\n        selectable={true}\n        // components={{\n        //   toolbar: getToolbar({additionalAction: openAvailabilityEditorAction}),\n        //   month: {event: RenderEventMonthView},\n        //   week: {event: RenderEvent},\n        //   day: {event: RenderEvent}\n        // }}\n\n      /> */}\n      </div>\n    </div>\n  )\n}\n\nfunction getStartOfWeek(day=new Date()) {\n  const opts = {weekStartsOn: 1};\n  return(startOfWeek(day, opts));\n}","import r2wc from '@r2wc/react-to-web-component';\n// import Test from './components/Test.js';\nimport Platzbelegung from './components/Platzbelegung0.js';\n\nconst testCmp = r2wc(Platzbelegung);\n\ncustomElements.define(\"my-platzbelegung-r2wc\", testCmp);\n"],"sourceRoot":""}