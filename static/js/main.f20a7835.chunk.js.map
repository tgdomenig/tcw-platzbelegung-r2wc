{"version":3,"sources":["index.js","components/Platzbelegung0.js"],"names":["testCmp","r2wc","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","Date","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","React","createElement","customElements","define"],"mappings":"6RAIA,IAAMA,EAAUC,YCcD,WAAyB,IAAAC,EAEVC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAhBI,GAAXF,EAAA,GAAWA,EAAA,GACkBD,mBAAS,OAAKI,EAAAF,YAAAC,EAAA,GAExDE,GAFoBD,EAAA,GAAkBA,EAAA,GAQEJ,mBAAS,IAAIM,OAAOC,EAAAL,YAAAG,EAAA,GAAxBG,GAAjBD,EAAA,GAAiBA,EAAA,GACEP,mBAAS,OAAKS,EAAAP,YAAAM,EAAA,GAAEE,GAApCD,EAAA,GAAgBA,EAAA,GACIT,mBAAS,OAAKW,EAAAT,YAAAQ,EAAA,GAAEE,GAApCD,EAAA,GAAgBA,EAAA,GACAX,mBAAS,OAAKa,EAAAX,YAAAU,EAAA,GAAEE,GAAlCD,EAAA,GAAcA,EAAA,GAEwBb,mBAAS,OAAKe,EAAAb,YAAAY,EAAA,GAAlBE,GAAxBD,EAAA,GAAwBA,EAAA,GACAf,oBAAS,IAAMiB,EAAAf,YAAAc,EAAA,GAwCjE,OAxCwBC,EAAA,GAAsBA,EAAA,GAyC5CC,IAAAC,cAAA,WACED,IAAAC,cAAA,WAAK,+BACLD,IAAAC,cAAA,WAAK,+BDxEXC,eAAeC,OAAO,wBAAyBxB","file":"static/js/main.f20a7835.chunk.js","sourcesContent":["import r2wc from '@r2wc/react-to-web-component';\n// import Test from './components/Test.js';\nimport Platzbelegung from './components/Platzbelegung0.js';\n\nconst testCmp = r2wc(Platzbelegung);\n\ncustomElements.define(\"my-platzbelegung-r2wc\", testCmp);\n","import React, {useState, useEffect} from 'react';\nimport { Calendar, Views } from 'react-big-calendar';\n\n// import {Modal, Spin} from 'antd';\nimport {startOfWeek, addDays, format} from 'date-fns';\n\nimport {localize, fmtEventStartEnd, formatTimestamp} from '../util/CalendarLocalizer';\nimport {getToolbar} from '../util/CalendarToolbar';\n\n\n//import {  Styled } from 'direflow-component';\n\nimport calendarStyles from 'react-big-calendar/lib/css/react-big-calendar.css';\nimport additionalStyles from './Platzbelegung.css';\n\nimport {fetchEvents} from '../data/DataSource';\nimport { stageEvents } from '../data/StageEvents';\n\nexport default function Platzbelegung() {\n\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  /* \n  Bemerkung: react-big-calendar zeigt die Agenda immer vom selektierten Datum an 30 Tage vorwärts.\n  Wir wollen jedoch statt dessen die Agenda synchron mit der \"Week View\" zeigen, d.h. für die selektierte Woche.\n  Zu diesem Zweck müssen wir das selektierte Datum \"kontrollieren\", d.h. als Zustandsvariable ausserhalb des Kalenders\n  definieren und explizit setzen, wenn zur Agenda-View gewechselt wird.\n  */\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [targetRange, setTargetRange] = useState(null); // der Datumsbereich, der zumindest geladen werden soll\n  const [loadedRange, setLoadedRange] = useState(null); // der Datumsbereich, der effektiv geladen wurde\n  const [isLoading, setIsLoading] = useState(null); // Variable, um zu vermeiden, dass mehrere Ladevorgänge gleichzeitig asynchron getriggered werden\n\n  const [timestampDataLoaded, setTimestampDataLoaded] = useState(null);\n  const [eventPopupVisible, setEventPopupVisible] = useState(false);\n\n  const isInTargetRange = (selDate, tgtRange) => {\n    return tgtRange && selDate >= tgtRange[0] && selDate <= tgtRange[1];\n  }\n\n  const determineTargetRange = (selDate) => {\n    const startOfWeek = getStartOfWeek(selDate);\n//    const endOfWeek = addDays(startOfWeek, 6); // end of current week\n    const targetEnd = addDays(startOfWeek, 20); // end of current week\n    return [startOfWeek, targetEnd];\n  }\n\n  const isContainedInLoadedRange = (tgtRange, lddRange) => {\n    return (tgtRange && lddRange && tgtRange[0] >= lddRange[0] && tgtRange[1] <= lddRange[1])\n  }\n\n  // bestimme, abhängig vom targetRange und dem bereits geladenen Range, welcher Bereich zusätzlich geladen werden soll\n  const determineLoadingRange = (tgtRange, lddRange) => {\n    let a, b, minDateLoaded;\n    if (! lddRange) {\n      minDateLoaded = addDays(tgtRange[0],-7);\n      a = minDateLoaded;\n      b = tgtRange[1];\n    }\n    else {\n      if (tgtRange[0] < lddRange[0]) {\n        minDateLoaded = addDays(tgtRange[0],-14);\n        a = minDateLoaded;\n        b = lddRange[0];\n      }\n      else { // targetRange[1] > loadedRange[1]\n        minDateLoaded = lddRange[0];\n        a = lddRange[1];\n        b = tgtRange[1];\n      }\n    }\n    return {loadingRange: [a,b], minDateLoaded};\n  }\n\n  return(\n    <div>\n      <div>This is a Platzbelegung (1)</div>\n      <div>Just write anything here</div>\n    </div>\n  );\n\n}\n\nfunction getStartOfWeek(day=new Date()) {\n  const opts = {weekStartsOn: 1};\n  return(startOfWeek(day, opts));\n}"],"sourceRoot":""}