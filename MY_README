
Tutorial React Web Component: https://www.bitovi.com/blog/how-to-create-a-web-component-with-create-react-app

Beispiel-Code: https://github.com/rjspencer/r2wc-checklist

npx create-react-app tcw-platzbelegung-r2wc

npm i @r2wc/react-to-web-component

// push to github: https://github.com/tgdomenig/tcw-platzbelegung-r2wc


// install github pages
npm install gh-pages --save-dev

// add the following to package.json:
"homepage": "tcw-platzbelegung-r2wc",

// add the following to package.json => "scripts": {}
"predeploy": "npm run build",
"deploy": "gh-pages -d build"

npm run deploy

/*
In Github => Pages gibt es jetzt eine URL, die auf eine Webseite zeigt mit der Komponente. 
In der Source dieser Seite findet man folgenden script tag:
*/
<script defer="defer" src="https://tgdomenig.github.io/tcw-platzbelegung-r2wc/static/js/main.672f0f37.js"></script>
<my-platzbelegung-r2wc></my-platzbelegung-r2wc>

// weitere Installs
npm install date-fns
npm install antd
npm install react-big-calendar

// WICHTIG: im letzten Schritt des Tutorials (s. oben) wird ein Shell-Skript erstellt, das den Hash-Code aus dem Namen des main-Programms löscht. 
// Das scheint nicht zu funktionieren. 
// DESHALB MUSS NACH JEDEM DEPLOYMENT DER NAME DES SCRIPTS IM EMPFANGENDEN HTML_TEILS (ALSO IN WORDPRESS ANGEPASST WERDEN.

// create shell-file predeploy.sh to remove hash from main build (see tutorial mentioned above) and add it to the predeploy-script in package.json:
"predeploy": "npm run build && sh predeploy.sh"


// NAECHSTES PROBLEM: Der build-Prozess von create-react-app macht im Fall eines grösseren Programms Code-Splitting, d.h. die resultierenden JS- und CSS-Files 
// werden in sogenannte .chunk-Dateien gesplittet. 
// In https://gist.github.com/simpixelated/90a3c16c3ed268fe24f5e5c9585ced2f wird ausgeführt, wie sich das vermeiden lässt (benötigt package "rewire")
// Bemerkung: ursprüngliche start- und build-scripts sind: {"start": "react-scripts start","build": "react-scripts build"}
    